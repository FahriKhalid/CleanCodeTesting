name: Quality Check

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  quality-check:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    container:
      image: ramageek/image:php8.3-laravel-dev
      options: --workdir /var/www/html
      env:
        DB_CONNECTION: mysql
        DB_HOST: mysql
        DB_PORT: 3306
        DB_DATABASE: laravel_test
        DB_USERNAME: root
        DB_PASSWORD: password

    steps:
      - name: Clone Repository
        run: |
          cd /var/www
          rm -rf html
          git clone https://github.com/FahriKhalid/CleanCodeTesting.git html
          cd html
          ls

      - name: Verify Clone
        run: |
          if [ -d "/var/www/html" ]; then
            echo "Repository cloned successfully"
            cd /var/www/html && ls -la
          else
            echo "Clone failed"
            exit 1
          fi

      - name: Show Status
        run: |
          pwd
          git status
        working-directory: /var/www/html

      - name: Setup Laravel
        run: |
          cp .env.example .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=mysql/g' .env
          sed -i 's/DB_DATABASE=laravel/DB_DATABASE=laravel_test/g' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=root/g' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=password/g' .env

          composer install --no-interaction --optimize-autoloader --quiet
          php artisan key:gen
          cp .env .env.testing
          php artisan migrate:fresh --seed
        working-directory: /var/www/html

      - name: Set Up SonarQube Scanner
        run: |
          # Install SonarScanner globally if it's not included in your container
          curl -sS https://get.sdkman.io | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install sonar-scanner
        working-directory: /var/www/html

      - name: Run Quality Check
        run: |
          # Run Composer QC (or use another command if it's a custom one)
          composer run qc || true

          # Set up the SonarQube properties file (sonar-project.properties)
          cp sonar-project.properties.example sonar-project.properties

          # Run the SonarScanner
          sonar-scanner \
            -Dsonar.projectKey=tugas-akhir-fahri \
            -Dsonar.sources=app,resources,routes \
            -Dsonar.tests=tests \
            -Dsonar.php.coverage.reportPaths=storage/test-coverage/coverage.xml \
            -Dsonar.login=${{ secrets.SONAR_LOGIN_TOKEN }} \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
        working-directory: /var/www/html
